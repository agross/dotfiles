#!/usr/bin/env zsh

# Rename image uploads as per my conventions. Perform dry run with -n.
# Docs:
# https://github.com/zsh-users/zsh/blob/master/Functions/Misc/zmv
# http://zsh.sourceforge.net/Doc/Release/Expansion.html#Filename-Generation
# http://zsh.sourceforge.net/Doc/Release/Expansion.html#Glob-Qualifiers
# http://zsh.sourceforge.net/Doc/Release/Expansion.html#Parameter-Expansion-Flags

set -eu
setopt PIPE_FAIL

autoload -Uz colors && colors
zmodload -F zsh/stat b:zstat

mkdir_mv() {
  local src target target_dir

  src=$2
  target=$3
  target_dir=$target:h

  mkdir -p -- $target_dir

  if [[ -f $target ]]; then
    zstat -H src_stat $src
    zstat -H target_stat $target

    if (( src_stat[size] == target_stat[size] )); then
      printf '%bTarget exists and has the same size (%b%s%b): %b%s%b\nDeleting %b%s%b\n' \
             $fg_bold[blue] \
             $fg_bold[yellow] \
             $target_stat[size] \
             $fg_bold[blue] \
             $fg_bold[green] \
             $target \
             $reset_color \
             $fg_bold[red] \
             $src \
             $reset_color

      rm -- $src

      return
    else
      printf '%bTarget exists but size does not match:\n%b%s%b %s\n%b%s%b %s\n' \
              $fg_bold[red] \
              $fg_bold[yellow] \
              $src_stat[size] \
              $reset_color \
              $src \
              $fg_bold[yellow] \
              $target_stat[size] \
              $reset_color \
              $target
    fi
  fi

  mv --verbose --no-clobber -- $src $target
}

# https://github.com/zsh-users/zsh/blob/master/Functions/Misc/zmv#L75
# -f  Force overwriting of destination files.
#     zmv would error out if the target exists. We check if the destination
#     already exists in mkdir_mv with some extra smarts.
# -Q  Force bare glob qualifiers on.
# -v  Be verbose.
# -p  Call <program> instead of cp, ln or mv.
opt=(-f -Q -v -p mkdir_mv $@)

autoload -U zmv

# Panoramas from camera.
#
# PANO_20190318_215555.vr.jpg
# ->
# Panoramas/2019-03-18 21.55.55-vr.jpg
panoramas=Panoramas
[[ -d $panoramas ]] || mkdir $panoramas
zmv $opt \
    '(**/)PANO_([[:digit:]](#c4))([[:digit:]](#c2))([[:digit:]](#c2))_([[:digit:]](#c2))([[:digit:]](#c2))([[:digit:]](#c2)).(vr).(*)(.N)' \
    '$1$panoramas/PANO $2-$3-$4 $5.$6.$7-$8.$9'

# Photos and videos from camera.
#
# IMG_20190215_081601.jpg
# ->
# 2019/2019-02-15 08.16.01.jpg
#
# IMG_20190215_081601_1.jpg
# ->
# 2019/2019-02-15 08.16.01_1.jpg
#
# VID_20190215_081601.mp4
# ->
# 2019/2019-02-15 08.16.01.mp4
#
# PXL_20190215_081601.mp4
# ->
# 2019/2019-02-15 08.16.01.mp4
#
# PANO_20190215_081601.mp4
# ->
# 2019/2019-02-15 08.16.01.mp4
zmv $opt \
    '(**/)(IMG|VID|PXL|PANO)_([[:digit:]](#c4))([[:digit:]](#c2))([[:digit:]](#c2))_([[:digit:]](#c2))([[:digit:]](#c2))([[:digit:]](#c2))*.(*)(.N)' \
    '$1$3/$3-$4-$5 $6.$7.$8.$9'

# Portraits from camera.
#
# 00000PORTRAIT_00000_BURST20190224163058395.jpg
# ->
# 2019/2019-02-24 16.30.58.jpg
#
# 00100sPORTRAIT_00100_BURST20190224163058395_COVER.jpg
# ->
# 2019/2019-02-24 16.30.58-blur.jpg
zmv $opt \
    '(**/)*PORTRAIT_[[:digit:]](#c5)_BURST([[:digit:]](#c4))([[:digit:]](#c2))([[:digit:]](#c2))([[:digit:]](#c2))([[:digit:]](#c2))([[:digit:]](#c2))[[:digit:]](#c3)(_COVER|*).(*)(.N)' \
    '$1$2/$2-$3-$4 $5.$6.$7${8/_COVER/-blur}.$9'

# Screenshots.
#
# Screenshot_20190215-081601.png
# ->
# 2019-02-15 08.16.01.png
#
# Screenshot_20190215-081601_App.png
# ->
# 2019-02-15 08.16.01-App.png
zmv $opt \
    '(**/)Screenshot_([[:digit:]](#c4))([[:digit:]](#c2))([[:digit:]](#c2))-([[:digit:]](#c2))([[:digit:]](#c2))([[:digit:]](#c2))(*).(*)(.N)' \
    '$1$2-$3-$4 $5.$6.$7${8/_/-}.$9'

# WhatsApp images and videos.
#
# IMG-20190224-WA0005.jpg
# ->
# 2019/2019-02-24-0005.jpg
#
# VID-20190302-WA0000.mp4
# ->
# 2019/2019-03-01-0000.mp4
zmv $opt \
    '(**/)(IMG|VID)-([[:digit:]](#c4))([[:digit:]](#c2))([[:digit:]](#c2))-WA([[:digit:]](#c4)).(*)(.N)' \
    '$1$3/$3-$4-$5-$6.$7'

# Threema images and videos with special duplicate handling.
mkdir_mv_threema() {
  local src target attempt_target
  typeset -A count_per_target

  src=$2
  target=${3%% \**}
  attempt_target=$target

  while [[ -f $attempt_target ]]; do
    printf '%b%s%b already exists, trying ' \
            $fg_bold[green] \
            $attempt_target \
            $reset_color

    if ! ((+count_per_target[$target])); then
      count_per_target[$target]=0
    fi
    count_per_target[$target]=$(($count_per_target[$target] + 1))

    attempt_target=$(printf '%s (%s).%s' $target:r $count_per_target[$target] $target:e)

    printf '%b%s%b\n' \
            $fg_bold[green] \
            $attempt_target \
            $reset_color
  done

  mkdir_mv -- $src $attempt_target
}

threema_opt=("${opt[@]}")
index=$opt[(i)mkdir_mv]
threema_opt[$index]=mkdir_mv_threema

# image-20240520-173202-494.jpeg
# ->
# 2024/2024-05-20 17.32.02.jpeg
zmv $threema_opt \
    '(**/)image-([[:digit:]](#c4))([[:digit:]](#c2))([[:digit:]](#c2))-([[:digit:]](#c2))([[:digit:]](#c2))([[:digit:]](#c2))-(*).(*)(.N)' \
    '$1$2/$2-$3-$4 $5.$6.$7.$9 * and to make it unique: $8'

# Rename *.jpeg to *jpg.
zmv $opt '(**/)(*).jpeg(.N)' '$1$2.jpg'
