require 'irb/completion'
begin
  require 'irb/ext/save-history'
rescue LoadError
end
require 'awesome_print'

AwesomePrint.irb!

IRB.conf[:SAVE_HISTORY] = 1000
IRB.conf[:HISTORY_FILE] = "#{ENV['HOME']}/.irb_history"

IRB.conf[:PROMPT_MODE] = :SIMPLE

IRB.conf[:AUTO_INDENT] = true

class Object
  # List methods which aren't in superclass.
  def local_methods(obj = self)
    (obj.methods - obj.class.superclass.instance_methods).sort
  end

  # Print documentation.
  #
  #   ri 'Array#pop'
  #   Array.ri
  #   Array.ri :pop
  #   arr.ri :pop
  def ri(method = nil)
    unless method && method =~ /^[A-Z]/ # if class isn't specified
      klass = self.is_a?(Class) ? name : self.class.name
      method = [klass, method].compact.join('#')
    end
    puts `ri '#{method}'`
  end
end

def copy(str)
  begin
    require 'win32/clipboard'
    Win32::Clipboard.set_data(str)
  rescue LoadError
    puts "Could not require win32/clipboard."
  end
end

def copy_history
  history = Readline::HISTORY.entries
  index = history.rindex('exit') || -1
  content = history[(index + 1)..-2].join("\n")
  puts content
  copy content
end

# vim: set ft=ruby ts=2 sw=2 et:
